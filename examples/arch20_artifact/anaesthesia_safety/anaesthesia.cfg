#-----------------------------------------------------------------------
# File: anaesthesia.cfg
#-----------------------------------------------------------------------

# Authors: M. Khaled
# Date created: 08.04.2020
# This example corresponds to problem 4.1.1 in ARCH-COMP19
# AMYTISS solves the problem in 2.3 seconds on i9 processor (MacBook Pro)
# Max Prob = 0.99982


#-----------------------------------------------------------------------
# Project Data
#-----------------------------------------------------------------------
# (Project name) is essential. It will be used for names of output files.
project_name = "anaesthesia";

#-----------------------------------------------------------------------
# Output Memory Model
#-----------------------------------------------------------------------
# The (data) tells the tool which memory model should be used when saving results
# use the values : raw | bits | bitmap | bdd
data = "raw";
save_transitions = "true";
save_controller = "true";

#-----------------------------------------------------------------------
# State/Input/Disturbance Sets
#-----------------------------------------------------------------------
# The user is asked to provide the range of the state, input and disturbance intervals.
# The lower and upper bounds of the sets are respectively indicated by "lb" and "ub". The disceretization parameters are also designated by "eta".
states{
	dim = "3";
	eta = " 0.5,  0.5,  0.5";
	lb  = " 1.0,  0.0,  0.0";
	ub  = " 6.0, 10.0, 10.0";
	err = " 0.0,  0.0,  0.0";
}
inputs{
	dim = "1";
	eta = "3.5";
	lb  = "0.00";
	ub  = "7.00";
	err = "0.00";
}

#-----------------------------------------------------------------------
# System-Post Dynamics
#-----------------------------------------------------------------------
# The user is required to provide the desired dynamics.
# The additive noise inside the dynamics is not needed to be implemented. Instead, the covariance matrix of the noises will be later asked to be implemented.
# Your post variables should start with (xx) followed by the index of the dimension (starting from 0 not 1).
# Maximum number of dimensions is (states.dim)
# you are allowed to use:
#  - array indexing to access states in x (e.g., x0 as the first state variable)
#  - array indexing to access inputs in u (e.g., u0 as the first input variable)
#  - array indexing to access disturbances in u (e.g., w0 as the first distrubance variable)
#  - any math function from: https://www.khronos.org/registry/OpenCL/sdk/1.0/docs/man/xhtml/mathFunctions.html
post_dynamics{
	constant_values = "concrete_t A[9] = {0.8192f, 0.0341f, 0.0126f, 0.0165f, 0.9822f, 0.0001f, 0.0009f, 1e-4f, 0.9989f}; concrete_t B[3] = {0.1105f, 0.0012f, 0.0001f};";

    xx0 = "x0*A[0] + x1*A[1] + x2*A[2] + u0*B[0]";
	xx1 = "x0*A[3] + x1*A[4] + x2*A[5] + u0*B[1]";
	xx2 = "x0*A[6] + x1*A[7] + x2*A[8] + u0*B[2]";
}

#-----------------------------------------------------------------------
# Information of the Noises
#-----------------------------------------------------------------------
# The user is also asked to provide the inverse and the determinant of the covariance matrix of the noises. 
# The original covariance matrix should be positive semi-definite.
# The cutting probability should be a value below th max value of the PDF and used to cut the probability below
# it and cosider any values below it as zero.
noise{
	pdf_truncation = "fixed_truncation";
	#inv_covariance_matrix = "0.84000, 0.8400, 0.8400";
	inv_covariance_matrix = "5, 5, 5";
	#det_covariance_matrix = "1.6873";
	det_covariance_matrix = "0.008";
	#cutting_region = "{{-3.0,3.0},{-3.0,3.0},{-3.0, 3.0}}";
	cutting_region = "{{-2.0,2.0},{-2.0,2.0},{-2.0, 2.0}}";
}

#-----------------------------------------------------------------------
# Specifications
#-----------------------------------------------------------------------
# This code is able to synthesize controllers for the "safety and reachability" pecifications.
# type = safe | reach
# If the property of interest is "safety", the user is asked to provide the range of the safe set.
specs {
	type = "safe";
	time_steps = "10";
}
